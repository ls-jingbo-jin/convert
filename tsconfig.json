{
  "compilerOptions": {

    "declaration": true,                              /* Generates corresponding '.d.ts' file. */
    "target": "es6",
    "module": "commonjs",                             /* Specify what module code is generated. */
    "moduleResolution": "node",                       /* Specify how TypeScript looks up a file from a given module specifier. */

    "allowJs": true,                                  /* Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files. */
    "sourceMap": true,                                /* Create source map files for emitted JavaScript files. */
    "outDir": "./build",                              /* Specify an output folder for all emitted files. */
    // "removeComments": true,                        /* Disable emitting comments. */
    "allowSyntheticDefaultImports": true,             /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true,                          /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */
    "forceConsistentCasingInFileNames": true,         /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": true,                                   /* Enable all strict type-checking options. */
    "noImplicitAny": false,                           /* Enable error reporting for expressions and declarations with an implied `any` type.. */
    "strictNullChecks": true,                         /* When type checking, take into account `null` and `undefined`. */
    "strictFunctionTypes": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "strictPropertyInitialization": true,             /* Check for class properties that are declared but not set in the constructor. */
    "noUnusedLocals": true,                           /* Enable error reporting when a local variables aren't read. */
    "skipLibCheck": true                              /* Skip type checking all .d.ts files. */
  },
  "include": ["src/**/*"],
}
